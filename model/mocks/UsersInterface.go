// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	model "mytodo/model"

	mock "github.com/stretchr/testify/mock"
)

// UsersInterface is an autogenerated mock type for the UsersInterface type
type UsersInterface struct {
	mock.Mock
}

// Login provides a mock function with given fields: login
func (_m *UsersInterface) Login(login model.Login) *model.Users {
	ret := _m.Called(login)

	var r0 *model.Users
	if rf, ok := ret.Get(0).(func(model.Login) *model.Users); ok {
		r0 = rf(login)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Users)
		}
	}

	return r0
}

// Register provides a mock function with given fields: newUser
func (_m *UsersInterface) Register(newUser model.Users) *model.Users {
	ret := _m.Called(newUser)

	var r0 *model.Users
	if rf, ok := ret.Get(0).(func(model.Users) *model.Users); ok {
		r0 = rf(newUser)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Users)
		}
	}

	return r0
}

// NewUsersInterface creates a new instance of UsersInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUsersInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *UsersInterface {
	mock := &UsersInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
